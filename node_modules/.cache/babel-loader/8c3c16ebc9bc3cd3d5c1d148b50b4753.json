{"ast":null,"code":"var _jsxFileName = \"/Users/orlandobuzana/Harvard_Projects/git_pages/react-apps/clikyapp/src/App.js\";\nimport React, { Component } from \"react\";\nimport PokemonCard from \"./components/GameCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/NavBar\"; // import Title from \"./components/Title\";\n\nimport pokemons from \"./pokemon.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // Setting this.state.pokemons to the pokemons json array\n\n    this.handleReset = () => {\n      this.setState({\n        score: 0\n      });\n      this.setState({\n        highscore: 0\n      });\n    };\n\n    this.scoreLogic = () => {\n      if (new Set(this.state.arrPok).size !== this.state.arrPok.length) {\n        this.setState({\n          score: 0\n        });\n        this.setState({\n          arrPok: new Set(this.state.arrPok)\n        }, () => console.log(this.state.arrPok));\n      } else {\n        this.setState(st => ({\n          score: st.score + 1\n        }));\n\n        if (this.state.score === this.state.highscore) {\n          this.setState(st => ({\n            highscore: st.highscore + 1\n          }));\n        }\n      }\n    };\n\n    this.shufflePokemon = (e, id) => {\n      const idPok = e.target.id; // console.log(idPok);\n      // pushing clicked Pokemon to an array\n\n      this.setState(prevState => ({\n        arrPok: [...prevState.arrPok, Number(idPok)]\n      }), () => {\n        this.scoreLogic();\n      });\n      const pokemons = this.state.pokemons.sort(() => Math.random() - 0.5);\n      this.setState({\n        pokemons\n      });\n    };\n\n    this.state = {\n      pokemons,\n      score: 0,\n      highscore: 0,\n      arrPok: []\n    };\n    this.shufflePokemon = this.shufflePokemon.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Score: \", this.state.score, \" || Top Score: \", this.state.highscore), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, this.state.pokemons.map(p => React.createElement(PokemonCard, {\n      shufflePokemon: this.shufflePokemon,\n      id: p.id,\n      name: p.name,\n      key: p.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/orlandobuzana/Harvard_Projects/git_pages/react-apps/clikyapp/src/App.js"],"names":["React","Component","PokemonCard","Wrapper","Navbar","pokemons","App","constructor","props","handleReset","setState","score","highscore","scoreLogic","Set","state","arrPok","size","length","console","log","st","shufflePokemon","e","id","idPok","target","prevState","Number","sort","Math","random","bind","render","map","p","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PokemonCard from \"./components/GameCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Navbar from \"./components/NavBar\";\n// import Title from \"./components/Title\";\nimport pokemons from \"./pokemon.json\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    // Setting this.state.pokemons to the pokemons json array\n    this.state = {\n      pokemons,\n      score: 0,\n      highscore: 0,\n      arrPok: []\n    };\n    this.shufflePokemon = this.shufflePokemon.bind(this);\n  }\n\n  handleReset = () => {\n    this.setState({ score: 0 });\n    this.setState({ highscore: 0 });\n  }\n\n  scoreLogic = () => {\n    if ((new Set(this.state.arrPok)).size !== this.state.arrPok.length) {\n      this.setState({ score: 0 });\n      this.setState({ arrPok: new Set(this.state.arrPok) }, () => console.log(this.state.arrPok));\n    } else {\n      this.setState(st => ({ score: st.score + 1 }));\n      if (this.state.score === this.state.highscore) {\n        this.setState(st => ({ highscore: st.highscore + 1 }));\n      }\n    }\n  }\n\n  shufflePokemon = (e, id) => {\n    const idPok = e.target.id;\n    // console.log(idPok);\n    // pushing clicked Pokemon to an array\n    this.setState(prevState => ({\n      arrPok: [...prevState.arrPok, Number(idPok)]\n    }),\n      () => { this.scoreLogic() });\n\n    const pokemons = this.state.pokemons.sort(() => Math.random() - 0.5);\n    this.setState({ pokemons });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar> Score: {this.state.score} || Top Score: {this.state.highscore} \n         </Navbar>\n        <Wrapper>\n          {this.state.pokemons.map(p => (\n            <PokemonCard\n              shufflePokemon={this.shufflePokemon}\n              id={p.id} name={p.name} key={p.id}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}